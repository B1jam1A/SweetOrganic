version: '3.7'

services:
  # Configuration pour RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - '5672:5672'
        - '8080:15672'
    volumes:
        - ./rabbitmq/lib:/var/lib/rabbitmq

  # Configuration pour Produit
  mongo_db_product:
    container_name: Product_DB
    image: mongo:latest
    restart: always
    volumes:
      - mongo_db_product:/data/db 
      - ./Produit/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27026:27017

  app_product:
    container_name: Product_API
    build:
      context: ./Produit
    ports:
      - 3026:3000
    env_file:
      - ./Produit/.env

    #command: ["./wait-for-it.sh", "some-rabbit:5672", "-t", "30", "--", "npm", "start"]

  # Configuration pour Utilisateur
  mongo_db_user:
    container_name: User_DB
    image: mongo:latest   
    restart: always
    volumes:
      - mongo_db_user:/data/db 
      - ./Utilisateur/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27018:27017

  app_user:
    container_name: User_API
    build:
      context: ./Utilisateur
    ports:
      - 3000:3000
    env_file:
      - ./Utilisateur/.env
    #command: ["./wait-for-it.sh", "some-rabbit:5672", "-t", "30", "--", "npm", "start"]

    # Configuration pour Avis
  mongo_db_review:
    container_name: Review_DB
    image: mongo:latest   
    restart: always
    volumes:
      - mongo_db_review:/data/db 
    ports:
      - 27099:27017

  app_review:
    container_name: Review_API
    build:
      context: ./Avis
    ports:
      - 3099:3000
    env_file:
      - ./Avis/.env
    #command: ["./wait-for-it.sh", "some-rabbit:5672", "-t", "30", "--", "npm", "start"]

#Mongodb Cart Service
  cart_mongodb:
    image: mongo:latest 
    container_name: cart_mongodb
    ports:
      - '27019:27017'
    restart: always

#Mongodb Payment Service
  payment_mongodb:
    image: mongo:latest 
    container_name: payment_mongodb
    ports:
      - '27020:27017'
    restart: always

#Payment Service
  payment_service:
    container_name: payment_service
    build: 
      context: ./PaiementService
    ports:
      - '3002:3000'
    volumes:
      - .:/code
    environment:
      FLASK_DEBUG: "true"
    env_file:
      - ./PaiementService/.env
    
#Cart Service
  cart_service:
    container_name: cart_service
    build: 
      context: ./CartService
    ports:
      - '3001:3000'
    volumes:
      - .:/code
    environment:
      FLASK_DEBUG: "true"
    env_file:
      - ./CartService/.env
    

volumes:
  mongo_db_product: {}
  mongo_db_user: {}
  mongo_db_review: {}
  payment_mongodb: {}
  cart_mongodb: {}

